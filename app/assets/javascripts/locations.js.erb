var overpassPrefix = "http://overpass-api.de/api/interpreter?data=",
  map;

$(document).ready(function() {
  L.mapbox.accessToken = 'pk.eyJ1Ijoic2FsbHlhbW9vcmUiLCJhIjoiY2lmZm53MmlkOHA2YnNka25wd3BmNDB3dyJ9.F5FdTfUY5XLbzWMcWpRp2A';
  map = L.mapbox.map('map', 'sallyamoore.nkikgok3')
    .setView([52.3081, 4.7642], 12);

  L.tileLayer('http://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png')
    .addTo(map);
  var swLat = (map.getBounds()._southWest.lat);
  var swLon = (map.getBounds()._southWest.lng);
  var neLat = (map.getBounds()._northEast.lat);
  var neLon = (map.getBounds()._northEast.lng);
  // Note: order of directions in api query is south, west, north, east

  // var rcnLayer = L.mapbox.featureLayer().addTo(map);

  // rcnLayer.on('layeradd', function(event) {
    // var marker = event.layer,
    //     feature = marker.feature;
    //
    // marker.setIcon(L.icon(feature.properties.icon));

  $.getJSON(overpassPrefix + '[out:json];(relation["type"="network"]["network"="rcn"]('
    + swLat + ',' + swLon + ',' + neLat + ',' + neLon +
    ');node(r)->.nodes;rel(r);way(r););out body;>;out skel qt;',
    function(data) {
      // create clickable markers for each bike node in bounds
      for (var i = 0; i < data.elements.length - 1; i++) {
        if (data.elements[i].tags && data.elements[i].lat)  {
          marker = new L.circleMarker([data.elements[i].lat, data.elements[i].lon], {
            color: "#01D298",
            opacity: 1.0,
            fill: false,
            weight: 3.5,
            radius: 10 })
    			.addTo(map);
        }
      }
  });

  // calls function to find current location. Need to set to occur only with click in nav.
  // map.locate({setView: true, maxZoom: 16});
  // map.on('locationfound', onLocationFound);
  // map.on('locationerror', onLocationError);
})


// finds current location.
function onLocationFound(event) {
    var radius = event.accuracy / 2;

    L.marker(event.latlng).addTo(map)
        .bindPopup("You are within " + radius + " meters from this point").openPopup();

    L.circle(event.latlng, radius).addTo(map);
}

// error if current location can't be found
function onLocationError(event) {
    alert(event.message);
}
